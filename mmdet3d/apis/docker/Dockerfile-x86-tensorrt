ARG OS_VERSION=18.04
ARG CUDA_VERSION=10.2

FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${OS_VERSION} AS base

ENV DEBIAN_FRONTEND noninteractive
SHELL ["/bin/bash", "-c"]
ARG CUDNN8_VERSION
ARG CUBLAS10_VERSION
ARG TRT8_VERSION

RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub

RUN apt-get update && apt-get install -y --no-install-recommends --allow-change-held-packages --allow-downgrades \
    dialog apt-utils libgl1 libglib2.0 python3 python3-dev python3-pip \
    libcudnn8=${CUDNN8_VERSION} libcudnn8-dev=${CUDNN8_VERSION} \
    libcublas10=${CUBLAS10_VERSION} libcublas-dev=${CUBLAS10_VERSION}

RUN echo "Install TensorRT ${TRT8_VERSION}" && apt-get update && apt-get install -y \
    libnvinfer-dev=${TRT8_VERSION} \
    libnvinfer-plugin-dev=${TRT8_VERSION} \
    libnvinfer-plugin8=${TRT8_VERSION} \
    libnvinfer8=${TRT8_VERSION} \
    libnvonnxparsers-dev=${TRT8_VERSION} \
    libnvonnxparsers8=${TRT8_VERSION} \
    libnvparsers-dev=${TRT8_VERSION} \
    libnvparsers8=${TRT8_VERSION} \
    python3-libnvinfer=${TRT8_VERSION} \
    python3-libnvinfer-dev=${TRT8_VERSION}

COPY requirements.txt .
RUN python3 -m pip install --upgrade pip && pip3 install setuptools && pip3 install -r requirements.txt
